package info.nukoneko.android.ho_n.sys.util.binding;import android.databinding.BindingAdapter;import android.text.method.LinkMovementMethod;import android.view.Gravity;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import java.util.Date;import info.nukoneko.android.ho_n.R;import info.nukoneko.android.ho_n.controller.common.view.NKSquareImageView;import info.nukoneko.android.ho_n.controller.common.view.NKStretchHeightImageView;import info.nukoneko.android.ho_n.controller.main.twitter.tab.NKTweetAdapter;import info.nukoneko.android.ho_n.sys.NKAppController;import info.nukoneko.android.ho_n.sys.util.image.NKPicasso;import info.nukoneko.android.ho_n.sys.util.text.NKTextUtil;import rx.Observable;import twitter4j.ExtendedMediaEntity;import twitter4j.Status;/** * Created by TEJNEK on 2016/11/12. */public final class TweetBindingUtils {    @BindingAdapter({"imageUrl"})    public static void setImage(ImageView imageView, String url) {        NKPicasso.getInstance().load(url).fit().centerCrop().into(imageView);    }    @BindingAdapter({"linkText"})    public static void setLinkText(TextView textView, String link) {        textView.setText(NKTextUtil.setLinkTag(link, new NKTweetAdapter.TweetLinkCallback(textView.getContext())));        textView.setMovementMethod(LinkMovementMethod.getInstance());    }    @BindingAdapter({"dateText"})    public static void setDateText(TextView textView, Date date) {        textView.setText(NKTextUtil.getDate(date));    }    @BindingAdapter({"viaText"})    public static void setViaText(TextView textView, String via) {        textView.setText(String.format("via %s", NKTextUtil.getVia(via)));    }    @BindingAdapter({"status"})    public static void setImages(LinearLayout scrollImageLayout, Status status) {        ExtendedMediaEntity[] medias = status.getExtendedMediaEntities();        final int dimenTweetImageSize = NKAppController.getApp().getWindowSize().x;        final int dimenTweetImagePadding =                (int) scrollImageLayout.getContext().getResources().getDimension(R.dimen.tweet_images_padding);        final int dimenTweetImageMarginLR =                (int) scrollImageLayout.getContext().getResources().getDimension(R.dimen.tweet_images_margin_LR);        if (medias.length > 0) {            scrollImageLayout.setVisibility(View.VISIBLE);            scrollImageLayout.removeAllViews();            LinearLayout.LayoutParams layoutParams =                    new LinearLayout.LayoutParams(                            ViewGroup.LayoutParams.WRAP_CONTENT,                            ViewGroup.LayoutParams.WRAP_CONTENT);            if (medias.length == 1) {                layoutParams.width = dimenTweetImageSize - dimenTweetImageMarginLR;                layoutParams.height = dimenTweetImageSize;                layoutParams.gravity = Gravity.CENTER_HORIZONTAL;            } else {                final int imageSize = dimenTweetImageSize / 2;                layoutParams.width = imageSize;                layoutParams.height = imageSize;                layoutParams.gravity = Gravity.LEFT;            }            if (medias.length == 1) {                NKStretchHeightImageView view = new NKStretchHeightImageView(scrollImageLayout.getContext());                view.setLayoutParams(layoutParams);                scrollImageLayout.addView(view);                NKPicasso.getInstance().load(medias[0].getMediaURLHttps()).into(view);            } else {                Observable.from(medias).forEach(media -> {                    NKSquareImageView view = new NKSquareImageView(scrollImageLayout.getContext());                    view.setScaleType(ImageView.ScaleType.CENTER_CROP);                    view.setLayoutParams(layoutParams);                    view.setPadding(dimenTweetImagePadding,                            dimenTweetImagePadding,                            dimenTweetImagePadding,                            dimenTweetImagePadding);                    scrollImageLayout.addView(view);                    NKPicasso.getInstance().load(media.getMediaURLHttps()).into(view);                });            }        } else {            scrollImageLayout.setVisibility(View.GONE);            scrollImageLayout.removeAllViews();        }    }}